/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v100.0.100
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import {
  ProfileSettings,
  ProfileSettingsFromJSON,
  ProfileSettingsToJSON,
  UpdateProfileSettings,
  UpdateProfileSettingsFromJSON,
  UpdateProfileSettingsToJSON,
} from '../models';

export interface SettingsPutRequest {
  body?: UpdateProfileSettings;
}

/**
 *
 */
export class SettingsApi extends runtime.BaseAPI {
  /**
   * Get the configurable settings associated with the profile.
   */
  async settingsGetRaw(): Promise<runtime.ApiResponse<ProfileSettings>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request({
      path: `/settings`,
      method: 'GET',
      headers: headerParameters,
      query: queryParameters,
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      ProfileSettingsFromJSON(jsonValue),
    );
  }

  /**
   * Get the configurable settings associated with the profile.
   */
  async settingsGet(): Promise<ProfileSettings> {
    const response = await this.settingsGetRaw();
    return await response.value();
  }

  /**
   * Update configurable settings associated with the profile.
   */
  async settingsPutRaw(
    requestParameters: SettingsPutRequest,
  ): Promise<runtime.ApiResponse<ProfileSettings>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/settings`,
      method: 'PUT',
      headers: headerParameters,
      query: queryParameters,
      body: UpdateProfileSettingsToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      ProfileSettingsFromJSON(jsonValue),
    );
  }

  /**
   * Update configurable settings associated with the profile.
   */
  async settingsPut(
    requestParameters: SettingsPutRequest,
  ): Promise<ProfileSettings> {
    const response = await this.settingsPutRaw(requestParameters);
    return await response.value();
  }
}
