/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import {
  CreateCheqdDIDRequest,
  CreateCheqdDIDRequestFromJSON,
  CreateCheqdDIDRequestToJSON,
  CreateCheqdDIDResponse,
  CreateCheqdDIDResponseFromJSON,
  CreateCheqdDIDResponseToJSON,
  CreateDIDJWKRequest,
  CreateDIDJWKRequestFromJSON,
  CreateDIDJWKRequestToJSON,
  CreateDIDJWKResponse,
  CreateDIDJWKResponseFromJSON,
  CreateDIDJWKResponseToJSON,
  CreateDidIndyRequest,
  CreateDidIndyRequestFromJSON,
  CreateDidIndyRequestToJSON,
  CreateDidIndyResponse,
  CreateDidIndyResponseFromJSON,
  CreateDidIndyResponseToJSON,
  DIDImport,
  DIDImportFromJSON,
  DIDImportToJSON,
  DIDImportResponse,
  DIDImportResponseFromJSON,
  DIDImportResponseToJSON,
  DeactivateCheqdDIDRequest,
  DeactivateCheqdDIDRequestFromJSON,
  DeactivateCheqdDIDRequestToJSON,
  DeactivateCheqdDIDResponse,
  DeactivateCheqdDIDResponseFromJSON,
  DeactivateCheqdDIDResponseToJSON,
  UpdateCheqdDIDRequest,
  UpdateCheqdDIDRequestFromJSON,
  UpdateCheqdDIDRequestToJSON,
  UpdateCheqdDIDResponse,
  UpdateCheqdDIDResponseFromJSON,
  UpdateCheqdDIDResponseToJSON,
} from '../models';

export interface DidCheqdCreatePostRequest {
  body?: CreateCheqdDIDRequest;
}

export interface DidCheqdDeactivatePostRequest {
  body?: DeactivateCheqdDIDRequest;
}

export interface DidCheqdUpdatePostRequest {
  body?: UpdateCheqdDIDRequest;
}

export interface DidImportPostRequest {
  body?: DIDImport;
}

export interface DidIndyCreatePostRequest {
  body?: CreateDidIndyRequest;
}

export interface DidJwkCreatePostRequest {
  body?: CreateDIDJWKRequest;
}

/**
 *
 */
export class DidApi extends runtime.BaseAPI {
  /**
   * Create a did:cheqd
   */
  async didCheqdCreatePostRaw(
    requestParameters: DidCheqdCreatePostRequest,
  ): Promise<runtime.ApiResponse<CreateCheqdDIDResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/did/cheqd/create`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: CreateCheqdDIDRequestToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateCheqdDIDResponseFromJSON(jsonValue),
    );
  }

  /**
   * Create a did:cheqd
   */
  async didCheqdCreatePost(
    requestParameters: DidCheqdCreatePostRequest,
  ): Promise<CreateCheqdDIDResponse> {
    const response = await this.didCheqdCreatePostRaw(requestParameters);
    return await response.value();
  }

  /**
   * Deactivate a did:cheqd
   */
  async didCheqdDeactivatePostRaw(
    requestParameters: DidCheqdDeactivatePostRequest,
  ): Promise<runtime.ApiResponse<DeactivateCheqdDIDResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/did/cheqd/deactivate`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: DeactivateCheqdDIDRequestToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      DeactivateCheqdDIDResponseFromJSON(jsonValue),
    );
  }

  /**
   * Deactivate a did:cheqd
   */
  async didCheqdDeactivatePost(
    requestParameters: DidCheqdDeactivatePostRequest,
  ): Promise<DeactivateCheqdDIDResponse> {
    const response = await this.didCheqdDeactivatePostRaw(requestParameters);
    return await response.value();
  }

  /**
   * Update a did:cheqd
   */
  async didCheqdUpdatePostRaw(
    requestParameters: DidCheqdUpdatePostRequest,
  ): Promise<runtime.ApiResponse<UpdateCheqdDIDResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/did/cheqd/update`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: UpdateCheqdDIDRequestToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      UpdateCheqdDIDResponseFromJSON(jsonValue),
    );
  }

  /**
   * Update a did:cheqd
   */
  async didCheqdUpdatePost(
    requestParameters: DidCheqdUpdatePostRequest,
  ): Promise<UpdateCheqdDIDResponse> {
    const response = await this.didCheqdUpdatePostRaw(requestParameters);
    return await response.value();
  }

  /**
   * Import an existing DID into the wallet
   */
  async didImportPostRaw(
    requestParameters: DidImportPostRequest,
  ): Promise<runtime.ApiResponse<DIDImportResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/did/import`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: DIDImportToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      DIDImportResponseFromJSON(jsonValue),
    );
  }

  /**
   * Import an existing DID into the wallet
   */
  async didImportPost(
    requestParameters: DidImportPostRequest,
  ): Promise<DIDImportResponse> {
    const response = await this.didImportPostRaw(requestParameters);
    return await response.value();
  }

  /**
   * Create a did:indy
   */
  async didIndyCreatePostRaw(
    requestParameters: DidIndyCreatePostRequest,
  ): Promise<runtime.ApiResponse<CreateDidIndyResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/did/indy/create`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: CreateDidIndyRequestToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateDidIndyResponseFromJSON(jsonValue),
    );
  }

  /**
   * Create a did:indy
   */
  async didIndyCreatePost(
    requestParameters: DidIndyCreatePostRequest,
  ): Promise<CreateDidIndyResponse> {
    const response = await this.didIndyCreatePostRaw(requestParameters);
    return await response.value();
  }

  /**
   * Create DID JWK.
   */
  async didJwkCreatePostRaw(
    requestParameters: DidJwkCreatePostRequest,
  ): Promise<runtime.ApiResponse<CreateDIDJWKResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/did/jwk/create`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: CreateDIDJWKRequestToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateDIDJWKResponseFromJSON(jsonValue),
    );
  }

  /**
   * Create DID JWK.
   */
  async didJwkCreatePost(
    requestParameters: DidJwkCreatePostRequest,
  ): Promise<CreateDIDJWKResponse> {
    const response = await this.didJwkCreatePostRaw(requestParameters);
    return await response.value();
  }
}
