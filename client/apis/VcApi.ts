/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.10.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import {
  AddProof,
  AddProofFromJSON,
  AddProofToJSON,
  AddProofResponse,
  AddProofResponseFromJSON,
  AddProofResponseToJSON,
  VerifyDiRequest,
  VerifyDiRequestFromJSON,
  VerifyDiRequestToJSON,
  VerifyDiResponse,
  VerifyDiResponseFromJSON,
  VerifyDiResponseToJSON,
} from '../models';

export interface VcDiAddProofPostRequest {
  body?: AddProof;
}

export interface VcDiVerifyPostRequest {
  body?: VerifyDiRequest;
}

/**
 *
 */
export class VcApi extends runtime.BaseAPI {
  /**
   * Add a DataIntegrityProof to a document.
   */
  async vcDiAddProofPostRaw(
    requestParameters: VcDiAddProofPostRequest,
  ): Promise<runtime.ApiResponse<AddProofResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/vc/di/add-proof`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: AddProofToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      AddProofResponseFromJSON(jsonValue),
    );
  }

  /**
   * Add a DataIntegrityProof to a document.
   */
  async vcDiAddProofPost(
    requestParameters: VcDiAddProofPostRequest,
  ): Promise<AddProofResponse> {
    const response = await this.vcDiAddProofPostRaw(requestParameters);
    return await response.value();
  }

  /**
   * Verify a document secured with a data integrity proof.
   */
  async vcDiVerifyPostRaw(
    requestParameters: VcDiVerifyPostRequest,
  ): Promise<runtime.ApiResponse<VerifyDiResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request({
      path: `/vc/di/verify`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: VerifyDiRequestToJSON(requestParameters.body),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      VerifyDiResponseFromJSON(jsonValue),
    );
  }

  /**
   * Verify a document secured with a data integrity proof.
   */
  async vcDiVerifyPost(
    requestParameters: VcDiVerifyPostRequest,
  ): Promise<VerifyDiResponse> {
    const response = await this.vcDiVerifyPostRaw(requestParameters);
    return await response.value();
  }
}
