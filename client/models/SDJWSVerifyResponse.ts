/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface SDJWSVerifyResponse
 */
export interface SDJWSVerifyResponse {
  /**
   * Disclosure arrays associated with the SD-JWT
   * @type {Array<Array<object>>}
   * @memberof SDJWSVerifyResponse
   */
  disclosures?: Array<Array<object>>;
  /**
   * Error text
   * @type {string}
   * @memberof SDJWSVerifyResponse
   */
  error?: string;
  /**
   * Headers from verified JWT.
   * @type {object}
   * @memberof SDJWSVerifyResponse
   */
  headers: object;
  /**
   * kid of signer
   * @type {string}
   * @memberof SDJWSVerifyResponse
   */
  kid: string;
  /**
   * Payload from verified JWT
   * @type {object}
   * @memberof SDJWSVerifyResponse
   */
  payload: object;
  /**
   *
   * @type {boolean}
   * @memberof SDJWSVerifyResponse
   */
  valid: boolean;
}

export function SDJWSVerifyResponseFromJSON(json: any): SDJWSVerifyResponse {
  return SDJWSVerifyResponseFromJSONTyped(json, false);
}

export function SDJWSVerifyResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SDJWSVerifyResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    disclosures: !exists(json, 'disclosures') ? undefined : json['disclosures'],
    error: !exists(json, 'error') ? undefined : json['error'],
    headers: json['headers'],
    kid: json['kid'],
    payload: json['payload'],
    valid: json['valid'],
  };
}

export function SDJWSVerifyResponseToJSON(
  value?: SDJWSVerifyResponse | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    disclosures: value.disclosures,
    error: value.error,
    headers: value.headers,
    kid: value.kid,
    payload: value.payload,
    valid: value.valid,
  };
}
