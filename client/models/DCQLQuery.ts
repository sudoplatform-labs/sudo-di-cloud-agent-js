/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  CredentialQuery,
  CredentialQueryFromJSON,
  CredentialQueryFromJSONTyped,
  CredentialQueryToJSON,
  CredentialSetQuery,
  CredentialSetQueryFromJSON,
  CredentialSetQueryFromJSONTyped,
  CredentialSetQueryToJSON,
} from './';

/**
 *
 * @export
 * @interface DCQLQuery
 */
export interface DCQLQuery {
  /**
   * Time of record creation
   * @type {string}
   * @memberof DCQLQuery
   */
  created_at?: string;
  /**
   * A list of credential set query objects
   * @type {Array<CredentialSetQuery>}
   * @memberof DCQLQuery
   */
  credential_sets?: Array<CredentialSetQuery>;
  /**
   * A list of credential query objects
   * @type {Array<CredentialQuery>}
   * @memberof DCQLQuery
   */
  credentials: Array<CredentialQuery>;
  /**
   * Current record state
   * @type {string}
   * @memberof DCQLQuery
   */
  state?: string;
  /**
   * Time of last record update
   * @type {string}
   * @memberof DCQLQuery
   */
  updated_at?: string;
}

export function DCQLQueryFromJSON(json: any): DCQLQuery {
  return DCQLQueryFromJSONTyped(json, false);
}

export function DCQLQueryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DCQLQuery {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    created_at: !exists(json, 'created_at') ? undefined : json['created_at'],
    credential_sets: !exists(json, 'credential_sets')
      ? undefined
      : (json['credential_sets'] as Array<any>).map(CredentialSetQueryFromJSON),
    credentials: (json['credentials'] as Array<any>).map(
      CredentialQueryFromJSON,
    ),
    state: !exists(json, 'state') ? undefined : json['state'],
    updated_at: !exists(json, 'updated_at') ? undefined : json['updated_at'],
  };
}

export function DCQLQueryToJSON(value?: DCQLQuery | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    created_at: value.created_at,
    credential_sets:
      value.credential_sets === undefined
        ? undefined
        : (value.credential_sets as Array<any>).map(CredentialSetQueryToJSON),
    credentials: (value.credentials as Array<any>).map(CredentialQueryToJSON),
    state: value.state,
    updated_at: value.updated_at,
  };
}
