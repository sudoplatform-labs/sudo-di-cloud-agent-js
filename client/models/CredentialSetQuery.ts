/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CredentialSetQuery
 */
export interface CredentialSetQuery {
  /**
   * A non-empty array, where each value in the array is a list of Credential Query identifiers representing one set of Credentials that satisfies the use case.
   * @type {Array<Array<string>>}
   * @memberof CredentialSetQuery
   */
  options: Array<Array<string>>;
  /**
   * The purpose for this credential set.
   * @type {object}
   * @memberof CredentialSetQuery
   */
  purpose?: object;
  /**
   * Whether the credential sets being queried are required.
   * @type {boolean}
   * @memberof CredentialSetQuery
   */
  required?: boolean;
}

export function CredentialSetQueryFromJSON(json: any): CredentialSetQuery {
  return CredentialSetQueryFromJSONTyped(json, false);
}

export function CredentialSetQueryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CredentialSetQuery {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    options: json['options'],
    purpose: !exists(json, 'purpose') ? undefined : json['purpose'],
    required: !exists(json, 'required') ? undefined : json['required'],
  };
}

export function CredentialSetQueryToJSON(
  value?: CredentialSetQuery | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    options: value.options,
    purpose: value.purpose,
    required: value.required,
  };
}
