/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface StatusList
 */
export interface StatusList {
  /**
   * Status list definition identifier
   * @type {string}
   * @memberof StatusList
   */
  definition_id?: string;
  /**
   * GZIP compressed and base64url encoded status list
   * @type {string}
   * @memberof StatusList
   */
  encoded_list?: string;
  /**
   * Status list number.
   * @type {string}
   * @memberof StatusList
   */
  list_number?: string;
  /**
   * Number of entries in status list, minimum 131072
   * @type {number}
   * @memberof StatusList
   */
  list_size?: number;
  /**
   * Status List message status
   * @type {{ [key: string]: object; }}
   * @memberof StatusList
   */
  status_message?: { [key: string]: object };
  /**
   * Status purpose.
   * @type {string}
   * @memberof StatusList
   */
  status_purpose?: StatusListStatusPurposeEnum;
  /**
   * Status size in bits
   * @type {number}
   * @memberof StatusList
   */
  status_size?: number;
}

/**
 * @export
 * @enum {string}
 */
export enum StatusListStatusPurposeEnum {
  Revocation = 'revocation',
  Suspension = 'suspension',
  Message = 'message',
}

export function StatusListFromJSON(json: any): StatusList {
  return StatusListFromJSONTyped(json, false);
}

export function StatusListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): StatusList {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    definition_id: !exists(json, 'definition_id')
      ? undefined
      : json['definition_id'],
    encoded_list: !exists(json, 'encoded_list')
      ? undefined
      : json['encoded_list'],
    list_number: !exists(json, 'list_number') ? undefined : json['list_number'],
    list_size: !exists(json, 'list_size') ? undefined : json['list_size'],
    status_message: !exists(json, 'status_message')
      ? undefined
      : json['status_message'],
    status_purpose: !exists(json, 'status_purpose')
      ? undefined
      : json['status_purpose'],
    status_size: !exists(json, 'status_size') ? undefined : json['status_size'],
  };
}

export function StatusListToJSON(value?: StatusList | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    definition_id: value.definition_id,
    encoded_list: value.encoded_list,
    list_number: value.list_number,
    list_size: value.list_size,
    status_message: value.status_message,
    status_purpose: value.status_purpose,
    status_size: value.status_size,
  };
}
