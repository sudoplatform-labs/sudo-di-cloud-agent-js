/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.10.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  MenuOption,
  MenuOptionFromJSON,
  MenuOptionFromJSONTyped,
  MenuOptionToJSON,
} from './';

/**
 *
 * @export
 * @interface Menu
 */
export interface Menu {
  /**
   * Message identifier
   * @type {string}
   * @memberof Menu
   */
  id?: string;
  /**
   * Message type
   * @type {string}
   * @memberof Menu
   */
  type?: string;
  /**
   * Introductory text for the menu
   * @type {string}
   * @memberof Menu
   */
  description?: string;
  /**
   * An optional error message to display in menu header
   * @type {string}
   * @memberof Menu
   */
  errormsg?: string;
  /**
   * List of menu options
   * @type {Array<MenuOption>}
   * @memberof Menu
   */
  options: Array<MenuOption>;
  /**
   * Menu title
   * @type {string}
   * @memberof Menu
   */
  title?: string;
}

export function MenuFromJSON(json: any): Menu {
  return MenuFromJSONTyped(json, false);
}

export function MenuFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Menu {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, '@id') ? undefined : json['@id'],
    type: !exists(json, '@type') ? undefined : json['@type'],
    description: !exists(json, 'description') ? undefined : json['description'],
    errormsg: !exists(json, 'errormsg') ? undefined : json['errormsg'],
    options: (json['options'] as Array<any>).map(MenuOptionFromJSON),
    title: !exists(json, 'title') ? undefined : json['title'],
  };
}

export function MenuToJSON(value?: Menu | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    '@id': value.id,
    '@type': value.type,
    description: value.description,
    errormsg: value.errormsg,
    options: (value.options as Array<any>).map(MenuOptionToJSON),
    title: value.title,
  };
}
