/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agency Service
 *
 * The version of the OpenAPI document: v0.5.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  V20CredFilter,
  V20CredFilterFromJSON,
  V20CredFilterFromJSONTyped,
  V20CredFilterToJSON,
  V20CredPreview,
  V20CredPreviewFromJSON,
  V20CredPreviewFromJSONTyped,
  V20CredPreviewToJSON,
} from './';

/**
 *
 * @export
 * @interface V20CredSendRequest
 */
export interface V20CredSendRequest {
  /**
   * Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)
   * @type {boolean}
   * @memberof V20CredSendRequest
   */
  auto_remove?: boolean;
  /**
   * Human-readable comment
   * @type {string}
   * @memberof V20CredSendRequest
   */
  comment?: string | null;
  /**
   * Connection identifier
   * @type {string}
   * @memberof V20CredSendRequest
   */
  connection_id: string;
  /**
   *
   * @type {V20CredPreview}
   * @memberof V20CredSendRequest
   */
  credential_preview?: V20CredPreview;
  /**
   * Credential specification criteria by format
   * @type {V20CredFilter}
   * @memberof V20CredSendRequest
   */
  filter: V20CredFilter;
  /**
   * Record trace information, based on agent configuration
   * @type {boolean}
   * @memberof V20CredSendRequest
   */
  trace?: boolean;
}

export function V20CredSendRequestFromJSON(json: any): V20CredSendRequest {
  return V20CredSendRequestFromJSONTyped(json, false);
}

export function V20CredSendRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): V20CredSendRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    auto_remove: !exists(json, 'auto_remove') ? undefined : json['auto_remove'],
    comment: !exists(json, 'comment') ? undefined : json['comment'],
    connection_id: json['connection_id'],
    credential_preview: !exists(json, 'credential_preview')
      ? undefined
      : V20CredPreviewFromJSON(json['credential_preview']),
    filter: V20CredFilterFromJSON(json['filter']),
    trace: !exists(json, 'trace') ? undefined : json['trace'],
  };
}

export function V20CredSendRequestToJSON(
  value?: V20CredSendRequest | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    auto_remove: value.auto_remove,
    comment: value.comment,
    connection_id: value.connection_id,
    credential_preview: V20CredPreviewToJSON(value.credential_preview),
    filter: V20CredFilterToJSON(value.filter),
    trace: value.trace,
  };
}
