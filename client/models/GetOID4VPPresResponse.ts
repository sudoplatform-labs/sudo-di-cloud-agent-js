/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v100.0.100
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface GetOID4VPPresResponse
 */
export interface GetOID4VPPresResponse {
  /**
   *
   * @type {Array<string>}
   * @memberof GetOID4VPPresResponse
   */
  errors?: Array<string>;
  /**
   * Presentation identifier
   * @type {string}
   * @memberof GetOID4VPPresResponse
   */
  presentation_id: string;
  /**
   * Status of the presentation
   * @type {string}
   * @memberof GetOID4VPPresResponse
   */
  status: GetOID4VPPresResponseStatusEnum;
  /**
   * Any claims verified in the presentation.
   * @type {object}
   * @memberof GetOID4VPPresResponse
   */
  verified_claims?: object;
}

/**
 * @export
 * @enum {string}
 */
export enum GetOID4VPPresResponseStatusEnum {
  RequestCreated = 'request-created',
  RequestRetrieved = 'request-retrieved',
  PresentationReceived = 'presentation-received',
  PresentationInvalid = 'presentation-invalid',
  PresentationValid = 'presentation-valid',
}

export function GetOID4VPPresResponseFromJSON(
  json: any,
): GetOID4VPPresResponse {
  return GetOID4VPPresResponseFromJSONTyped(json, false);
}

export function GetOID4VPPresResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetOID4VPPresResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    errors: !exists(json, 'errors') ? undefined : json['errors'],
    presentation_id: json['presentation_id'],
    status: json['status'],
    verified_claims: !exists(json, 'verified_claims')
      ? undefined
      : json['verified_claims'],
  };
}

export function GetOID4VPPresResponseToJSON(
  value?: GetOID4VPPresResponse | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    errors: value.errors,
    presentation_id: value.presentation_id,
    status: value.status,
    verified_claims: value.verified_claims,
  };
}
