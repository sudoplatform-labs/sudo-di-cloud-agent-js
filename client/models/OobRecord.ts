/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.6.8
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  InvitationMessage,
  InvitationMessageFromJSON,
  InvitationMessageFromJSONTyped,
  InvitationMessageToJSON,
  ServiceDecorator,
  ServiceDecoratorFromJSON,
  ServiceDecoratorFromJSONTyped,
  ServiceDecoratorToJSON,
} from './';

/**
 *
 * @export
 * @interface OobRecord
 */
export interface OobRecord {
  /**
   * Connection record identifier
   * @type {string}
   * @memberof OobRecord
   */
  attach_thread_id?: string;
  /**
   * Connection record identifier
   * @type {string}
   * @memberof OobRecord
   */
  connection_id?: string;
  /**
   * Time of record creation
   * @type {string}
   * @memberof OobRecord
   */
  created_at?: string;
  /**
   * Invitation message identifier
   * @type {string}
   * @memberof OobRecord
   */
  invi_msg_id: string;
  /**
   * Out of band invitation message
   * @type {InvitationMessage}
   * @memberof OobRecord
   */
  invitation: InvitationMessage;
  /**
   * Oob record identifier
   * @type {string}
   * @memberof OobRecord
   */
  oob_id: string;
  /**
   * Recipient key used for oob invitation
   * @type {string}
   * @memberof OobRecord
   */
  our_recipient_key?: string;
  /**
   * OOB Role
   * @type {string}
   * @memberof OobRecord
   */
  role?: OobRecordRoleEnum;
  /**
   * Out of band message exchange state
   * @type {string}
   * @memberof OobRecord
   */
  state: OobRecordStateEnum;
  /**
   *
   * @type {ServiceDecorator}
   * @memberof OobRecord
   */
  their_service?: ServiceDecorator;
  /**
   * Record trace information, based on agent configuration
   * @type {boolean}
   * @memberof OobRecord
   */
  trace?: boolean;
  /**
   * Time of last record update
   * @type {string}
   * @memberof OobRecord
   */
  updated_at?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum OobRecordRoleEnum {
  Sender = 'sender',
  Receiver = 'receiver',
} /**
 * @export
 * @enum {string}
 */
export enum OobRecordStateEnum {
  Initial = 'initial',
  PrepareResponse = 'prepare-response',
  AwaitResponse = 'await-response',
  ReuseNotAccepted = 'reuse-not-accepted',
  ReuseAccepted = 'reuse-accepted',
  Done = 'done',
  Deleted = 'deleted',
}

export function OobRecordFromJSON(json: any): OobRecord {
  return OobRecordFromJSONTyped(json, false);
}

export function OobRecordFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OobRecord {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    attach_thread_id: !exists(json, 'attach_thread_id')
      ? undefined
      : json['attach_thread_id'],
    connection_id: !exists(json, 'connection_id')
      ? undefined
      : json['connection_id'],
    created_at: !exists(json, 'created_at') ? undefined : json['created_at'],
    invi_msg_id: json['invi_msg_id'],
    invitation: InvitationMessageFromJSON(json['invitation']),
    oob_id: json['oob_id'],
    our_recipient_key: !exists(json, 'our_recipient_key')
      ? undefined
      : json['our_recipient_key'],
    role: !exists(json, 'role') ? undefined : json['role'],
    state: json['state'],
    their_service: !exists(json, 'their_service')
      ? undefined
      : ServiceDecoratorFromJSON(json['their_service']),
    trace: !exists(json, 'trace') ? undefined : json['trace'],
    updated_at: !exists(json, 'updated_at') ? undefined : json['updated_at'],
  };
}

export function OobRecordToJSON(value?: OobRecord | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    attach_thread_id: value.attach_thread_id,
    connection_id: value.connection_id,
    created_at: value.created_at,
    invi_msg_id: value.invi_msg_id,
    invitation: InvitationMessageToJSON(value.invitation),
    oob_id: value.oob_id,
    our_recipient_key: value.our_recipient_key,
    role: value.role,
    state: value.state,
    their_service: ServiceDecoratorToJSON(value.their_service),
    trace: value.trace,
    updated_at: value.updated_at,
  };
}
