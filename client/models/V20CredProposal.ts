/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agency Service
 *
 * The version of the OpenAPI document: v0.6.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  AttachDecorator,
  AttachDecoratorFromJSON,
  AttachDecoratorFromJSONTyped,
  AttachDecoratorToJSON,
  V20CredFormat,
  V20CredFormatFromJSON,
  V20CredFormatFromJSONTyped,
  V20CredFormatToJSON,
  V20CredPreview,
  V20CredPreviewFromJSON,
  V20CredPreviewFromJSONTyped,
  V20CredPreviewToJSON,
} from './';

/**
 *
 * @export
 * @interface V20CredProposal
 */
export interface V20CredProposal {
  /**
   * Message identifier
   * @type {string}
   * @memberof V20CredProposal
   */
  id?: string;
  /**
   * Message type
   * @type {string}
   * @memberof V20CredProposal
   */
  readonly type?: string;
  /**
   * Human-readable comment
   * @type {string}
   * @memberof V20CredProposal
   */
  comment?: string | null;
  /**
   * Credential preview
   * @type {V20CredPreview}
   * @memberof V20CredProposal
   */
  credential_preview?: V20CredPreview;
  /**
   * Credential filter per acceptable format on corresponding identifier
   * @type {Array<AttachDecorator>}
   * @memberof V20CredProposal
   */
  filtersattach: Array<AttachDecorator>;
  /**
   * Attachment formats
   * @type {Array<V20CredFormat>}
   * @memberof V20CredProposal
   */
  formats: Array<V20CredFormat>;
}

export function V20CredProposalFromJSON(json: any): V20CredProposal {
  return V20CredProposalFromJSONTyped(json, false);
}

export function V20CredProposalFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): V20CredProposal {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, '@id') ? undefined : json['@id'],
    type: !exists(json, '@type') ? undefined : json['@type'],
    comment: !exists(json, 'comment') ? undefined : json['comment'],
    credential_preview: !exists(json, 'credential_preview')
      ? undefined
      : V20CredPreviewFromJSON(json['credential_preview']),
    filtersattach: (json['filters~attach'] as Array<any>).map(
      AttachDecoratorFromJSON,
    ),
    formats: (json['formats'] as Array<any>).map(V20CredFormatFromJSON),
  };
}

export function V20CredProposalToJSON(value?: V20CredProposal | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    '@id': value.id,
    comment: value.comment,
    credential_preview: V20CredPreviewToJSON(value.credential_preview),
    'filters~attach': (value.filtersattach as Array<any>).map(
      AttachDecoratorToJSON,
    ),
    formats: (value.formats as Array<any>).map(V20CredFormatToJSON),
  };
}
