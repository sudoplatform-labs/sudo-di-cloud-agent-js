/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface StatusListDef
 */
export interface StatusListDef {
  /**
   * Time of record creation
   * @type {string}
   * @memberof StatusListDef
   */
  created_at?: string;
  /**
   * Status list definition identifier
   * @type {string}
   * @memberof StatusListDef
   */
  id?: string;
  /**
   * Issuer DID for the status list
   * @type {string}
   * @memberof StatusListDef
   */
  issuer_did?: string;
  /**
   * Current status list index
   * @type {number}
   * @memberof StatusListDef
   */
  list_index?: number;
  /**
   * Next status list number
   * @type {string}
   * @memberof StatusListDef
   */
  list_number?: string;
  /**
   * Status list numbers
   * @type {Array<string>}
   * @memberof StatusListDef
   */
  list_numbers?: Array<string>;
  /**
   * Current status list random seed
   * @type {string}
   * @memberof StatusListDef
   */
  list_seed?: string;
  /**
   * Number of entries in the list, must be power of two, minimum 131072
   * @type {number}
   * @memberof StatusListDef
   */
  list_size?: number;
  /**
   * Status list type: 'w3c', 'ietf' or none
   * @type {string}
   * @memberof StatusListDef
   */
  list_type?: string;
  /**
   * Next status list number
   * @type {string}
   * @memberof StatusListDef
   */
  next_list_number?: string;
  /**
   * Number of entries in each shard, between 1 and list_size
   * @type {number}
   * @memberof StatusListDef
   */
  shard_size?: number;
  /**
   * Current record state
   * @type {string}
   * @memberof StatusListDef
   */
  state?: string;
  /**
   * Status List message status
   * @type {Array<{ [key: string]: object; }>}
   * @memberof StatusListDef
   */
  status_message?: Array<{ [key: string]: object }>;
  /**
   * Status purpose: 'refresh', 'revocation', 'suspension' or 'message'
   * @type {string}
   * @memberof StatusListDef
   */
  status_purpose?: string;
  /**
   * Status size in bits
   * @type {number}
   * @memberof StatusListDef
   */
  status_size?: number;
  /**
   * Supported credential identifier
   * @type {string}
   * @memberof StatusListDef
   */
  supported_cred_id?: string;
  /**
   * Time of last record update
   * @type {string}
   * @memberof StatusListDef
   */
  updated_at?: string;
  /**
   * Issuer DID for the status list
   * @type {string}
   * @memberof StatusListDef
   */
  verification_method?: string;
}

export function StatusListDefFromJSON(json: any): StatusListDef {
  return StatusListDefFromJSONTyped(json, false);
}

export function StatusListDefFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): StatusListDef {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    created_at: !exists(json, 'created_at') ? undefined : json['created_at'],
    id: !exists(json, 'id') ? undefined : json['id'],
    issuer_did: !exists(json, 'issuer_did') ? undefined : json['issuer_did'],
    list_index: !exists(json, 'list_index') ? undefined : json['list_index'],
    list_number: !exists(json, 'list_number') ? undefined : json['list_number'],
    list_numbers: !exists(json, 'list_numbers')
      ? undefined
      : json['list_numbers'],
    list_seed: !exists(json, 'list_seed') ? undefined : json['list_seed'],
    list_size: !exists(json, 'list_size') ? undefined : json['list_size'],
    list_type: !exists(json, 'list_type') ? undefined : json['list_type'],
    next_list_number: !exists(json, 'next_list_number')
      ? undefined
      : json['next_list_number'],
    shard_size: !exists(json, 'shard_size') ? undefined : json['shard_size'],
    state: !exists(json, 'state') ? undefined : json['state'],
    status_message: !exists(json, 'status_message')
      ? undefined
      : json['status_message'],
    status_purpose: !exists(json, 'status_purpose')
      ? undefined
      : json['status_purpose'],
    status_size: !exists(json, 'status_size') ? undefined : json['status_size'],
    supported_cred_id: !exists(json, 'supported_cred_id')
      ? undefined
      : json['supported_cred_id'],
    updated_at: !exists(json, 'updated_at') ? undefined : json['updated_at'],
    verification_method: !exists(json, 'verification_method')
      ? undefined
      : json['verification_method'],
  };
}

export function StatusListDefToJSON(value?: StatusListDef | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    created_at: value.created_at,
    id: value.id,
    issuer_did: value.issuer_did,
    list_index: value.list_index,
    list_number: value.list_number,
    list_numbers: value.list_numbers,
    list_seed: value.list_seed,
    list_size: value.list_size,
    list_type: value.list_type,
    next_list_number: value.next_list_number,
    shard_size: value.shard_size,
    state: value.state,
    status_message: value.status_message,
    status_purpose: value.status_purpose,
    status_size: value.status_size,
    supported_cred_id: value.supported_cred_id,
    updated_at: value.updated_at,
    verification_method: value.verification_method,
  };
}
