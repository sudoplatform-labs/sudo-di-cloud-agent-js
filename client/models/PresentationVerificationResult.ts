/**
 * Sudo Decentralized Identity Cloud Agent SDK
 * Provides REST API wrappers for Typescript Agent Controllers using the Sudo Decentralized Identity Cloud Agent Service
 *
 * The version of the OpenAPI document: v0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  DocumentVerificationResult,
  DocumentVerificationResultFromJSON,
  DocumentVerificationResultFromJSONTyped,
  DocumentVerificationResultToJSON,
} from './';

/**
 *
 * @export
 * @interface PresentationVerificationResult
 */
export interface PresentationVerificationResult {
  /**
   *
   * @type {Array<DocumentVerificationResult>}
   * @memberof PresentationVerificationResult
   */
  credential_results?: Array<DocumentVerificationResult>;
  /**
   *
   * @type {Array<string>}
   * @memberof PresentationVerificationResult
   */
  errors?: Array<string>;
  /**
   *
   * @type {DocumentVerificationResult}
   * @memberof PresentationVerificationResult
   */
  presentation_result?: DocumentVerificationResult;
  /**
   *
   * @type {boolean}
   * @memberof PresentationVerificationResult
   */
  verified: boolean;
}

export function PresentationVerificationResultFromJSON(
  json: any,
): PresentationVerificationResult {
  return PresentationVerificationResultFromJSONTyped(json, false);
}

export function PresentationVerificationResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PresentationVerificationResult {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    credential_results: !exists(json, 'credential_results')
      ? undefined
      : (json['credential_results'] as Array<any>).map(
          DocumentVerificationResultFromJSON,
        ),
    errors: !exists(json, 'errors') ? undefined : json['errors'],
    presentation_result: !exists(json, 'presentation_result')
      ? undefined
      : DocumentVerificationResultFromJSON(json['presentation_result']),
    verified: json['verified'],
  };
}

export function PresentationVerificationResultToJSON(
  value?: PresentationVerificationResult | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    credential_results:
      value.credential_results === undefined
        ? undefined
        : (value.credential_results as Array<any>).map(
            DocumentVerificationResultToJSON,
          ),
    errors: value.errors,
    presentation_result: DocumentVerificationResultToJSON(
      value.presentation_result,
    ),
    verified: value.verified,
  };
}
